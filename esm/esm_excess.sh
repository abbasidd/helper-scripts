printf "Exporting variables \n\n"


printf "Exporting variables \n\n"

export DEPLOYER=0x1bE12fE46E8dccE1435cA2a95E1E8Fd067f54adf
export CHANGELOG=0x078b6f081E3E159f06994EaAdCE11704934f62cd
export MULTICALL=0x2369b9E1d5b88a57380CC72038ad9F2351C10020
export FAUCET=0xeE4Bd5203bF8A3D147292529eedA954B3276E9A5
export MCD_DEPLOY=0x02dDCF272c681687789c674526C0F5dA631B9bc5
export FLIP_FAB=0xc56e50d5c07163bb5b506598f41e8402f149c2d8
export CLIP_FAB=0xb2618268bc3e45f922b196d2e77db2d651aa6a7b
export CALC_FAB=0x2739079ce51c1fc46c96c4f5f2f9d4088fd817c9
export MCD_GOV=0xc4Ea8cE98436B58cc51F7D2d501e27dbbA0066f2
export GOV_GUARD=0x7Cb4BebEFC34B5880c13Fdf61fe207508d71ba8b
export MCD_IOU=0x249d2158c3Fc358F64429f540aEfE3a60A865C6A
export MCD_ADM=0xB119ee188aF24b78f30f2A42280f94f73d2Bdcb5
export VOTE_PROXY_FACTORY=0x2c6a8bC9F03DeE6200E29c99a8678585370a2c92
export VOTE_DELEGATE_PROXY_FACTORY=0xa0651aCaA384ec105B91FEc3e2aa21021bac8120
export MCD_VAT=0x7059BD0F529535688ee69c490848508732fCCE07
export MCD_JUG=0xc2D20A2Fb2fcb14bDB6C0b7f857fC780C9E3C27E
export MCD_CAT=0x9F44ba488983c5122D88391D6F76344A2113bc34
export MCD_DOG=0xFD4c88ba4F511Df08f4E72f38b79E2f6158A42C9
export MCD_VOW=0x140070A6246b4F6321f9C3349b27EA00EC2A391B
export MCD_JOIN_DAI=0xB1144217e10c22a171f828c9de15a19039f4b537
export MCD_FLAP=0xCdCAB0D9B91c13D6460241da8B2B8fEE111be779
export MCD_FLOP=0xc86B93D4d5A525D263315BeF5fc1c68Df696d73a
export MCD_PAUSE=0x4651C1Da28B1a3D806612D1a9F4C00EbD4Ac548a
export MCD_PAUSE_PROXY=0x60aD5Cf2a2DE47b1FD9717A6212E3f6375832195
export MCD_GOV_ACTIONS=0x4d40908c0f7948a8d28A406edBB933E447fEB636
export MCD_DAI=0x3d28002C3A50Ed29a41DcE3aE82301C2425a0DF9
export MCD_SPOT=0xE69365633e58DED0651C401F9Ff61D332374cC03
export MCD_POT=0x8Cb5765d40cDE60387B43D06D79121B86aE59566
export MCD_CURE=0x480f32a955cE5440BE17A161715b2384E86e83e6
export MCD_END=0xf4BAD4236E55EFCB2fF6555Edd1D4E2662f5a17E
export MCD_ESM=0xaeecfF82e82765b0e24B9CE189FfdD073843b8f1
export PROXY_ACTIONS=0xAE1b1b2bA3f5974ee29352E9322Dd74b11085A75
export PROXY_ACTIONS_END=0x18035dF4d4fb42668cEd75B0AC3B480BBcB24283
export PROXY_ACTIONS_DSR=0x5Ef779a270173ac5647BF6a40E0eA5C26Ff90f21
export CDP_MANAGER=0x84d4Ef5d2e0D361cc8c4CD11DBf66aEE68d6d2Fd
export DSR_MANAGER=0x89222A5B9E36c356bCf573e1aA55b912124A7E73
export GET_CDPS=0x2B96B2576f8b186aEFf1258d297521A47234B278
export ILK_REGISTRY=0x0B917c303A87959AB1d6aF30fcAbe6a3C0AF8515
export OSM_MOM=0xF5f7993446a9ebea3186455e0c54EC412cc92a05
export FLIPPER_MOM=0xEb6181Da388a47e9E882e49f05dB588e5bc54883
export CLIPPER_MOM=0x779E0cCA0820d6a10F627157B9E1dFaF79206F4B
export MCD_IAM_AUTO_LINE=0xa1ac7f822A9733C9E5fb518033E8C7A04E3581F7
export MCD_FLASH=0x72393F1f7b60E7315c6cfe0EA8Bcf6059f955c08
export MCD_VEST_DAI=0xBEE8493ef4852B1C917E11735583EdcA21B18fd4
export MCD_VEST_MKR=0x494d347dE26cF513FceFf65f302e315A4282472A
export MCD_VEST_MKR_TREASURY=0xcf5baBDF8bBfd9B8B005308022862eD6A55C7dfa
export PROXY_FACTORY=0x0F16E13BAf87B4D3E4Ef8BF5Ff06010116783b45
export PROXY_REGISTRY=0x95F316F304E2b5D27e76db5A6485E6137030634C
export ETH=0xfEc6E69857A85Ebc7097B4D7D4b5A9A84f8D04Df
export VAL_ETH=0x230b1536c5651091eD1FCf18B6d9CFec3436004f
export PIP_ETH=0x230b1536c5651091eD1FCf18B6d9CFec3436004f
export MCD_JOIN_ETH_A=0x07fe3ea3B30e54206529B0D11061A7Fd588BC712
export MCD_CLIP_ETH_A=0x61947b8607F18B1B1E7584e089ae0CC02E9e824c
export MCD_CLIP_CALC_ETH_A=0xAf61D91c9B46EE39bc99DD2C76106789872accE7
export MCD_JOIN_ETH_B=0x7aB6b69E5D9CB578D7f3D1e9828AEb49C4771735
export MCD_CLIP_ETH_B=0xbb11dCE5C7A32Fe380Bec633958aDBE355631490
export MCD_CLIP_CALC_ETH_B=0x1ec9947726E349d04AcB2Ca89ebF62C95Cb518eb
export MCD_JOIN_ETH_C=0x9Ea49F9AF11DebeD155e534B39595b6D5EA54873
export MCD_CLIP_ETH_C=0xFed4955995D8D0199D490478ebe67E01202a59B1
export MCD_CLIP_CALC_ETH_C=0x99976D822D2624FbBb79D044AD46F0F4079A727E
export WBTC=0xb0b937027B8804b12B0dc860af2797670EAAC159
export VAL_WBTC=0xaf36604dAd4A2DC3C8aB91F6e7f3CB4Ee0Bd5459
export PIP_WBTC=0xaf36604dAd4A2DC3C8aB91F6e7f3CB4Ee0Bd5459
export MCD_JOIN_WBTC_A=0xa101ab84A48e52a33A6bED5c5aAfC03Af9467Dc8
export MCD_CLIP_WBTC_A=0xDBA3fEf8Bcf440aC02F9D8CAC813bA490f47c2e2
export MCD_CLIP_CALC_WBTC_A=0x3bB8048EF8ba1E6f05F206FB0eB59a1d91863A83
export MCD_JOIN_WBTC_B=0xAB700b843a8A7b0B69c31616031616A6776b6BcB
export MCD_CLIP_WBTC_B=0x34409677fB13D4F2125Ed362f1F6CAFEA5B72D87
export MCD_CLIP_CALC_WBTC_B=0x5C040b03d3aD165091727c5fA3cfe23023dfC5C4
export MCD_JOIN_WBTC_C=0x86B1816089A1780d25f8D3141888Af785f4D8dd2
export MCD_CLIP_WBTC_C=0x2639C0c15FEB1D6dc1da886af8F9c3729224AcBa
export MCD_CLIP_CALC_WBTC_C=0x5A1D772776917C79062338eB31539722D806229e
export PROXY_PAUSE_ACTIONS=0xaA872225Ccb3BE725fcC5b4414c337Eb7c4751FB
export PROXY_DEPLOYER=0x1093686703555a24d454A84a94b3F0fBA9E8B186
export ETH_FROM=0x7D9ecE67ab918361b8b8Ad94113AC17f42BF9c12
export PROXYREGISTRY=0x95F316F304E2b5D27e76db5A6485E6137030634C

printf "\n\n\nmsg.sender is $ETH_FROM\n--------------------------!!!!!!!!!!----------------------------\n\n"


printf "Now calling \"seth ls\" \n"

seth ls

read -p "Press enter to continue"

printf "Check the urn; for which we are calling vat.urn(ink , art) Before skimming\n"

seth call $MCD_VAT "urns(bytes32,address)(uint256,uint256)" $(seth --from-ascii "ETH-B")  $(seth call $CDP_MANAGER "urns(uint)" 3)

read -p "Press enter to continue"
printf "\n\nNow calling skim on this addr's ilk and urn. \n"

seth send $MCD_END "skim(bytes32,address)" $(seth --from-ascii "ETH-B") $(seth call $CDP_MANAGER "urns(uint)" 3)

read -p "Press enter to continue"

printf "Check the urn; for which we are calling vat.urn(ink , art) After skimming\n"

seth call $MCD_VAT "urns(bytes32,address)(uint256,uint256)" $(seth --from-ascii "ETH-B")  $(seth call $CDP_MANAGER "urns(uint)" 3)

read -p "Press enter to continue"
printf "\n\n"

export balance=$(seth call $ETH "balanceOf(address)(uint)" 0x7D9ecE67ab918361b8b8Ad94113AC17f42BF9c12)
printf "Before balance of wrapped eth of ETH_FROM : $balance\n"
read -p "Press enter to continue"
printf "\nnow withdraw our excess collateral against no art against specific urn\n"

export freeETHcalldata=$(seth calldata 'freeGem(address,address,address,uint)' $CDP_MANAGER $MCD_JOIN_ETH_B $MCD_END 3 ) 
export myProxy=$(seth call $PROXYREGISTRY 'proxies(address)(address)' $ETH_FROM)

printf "\n$myProxy my proxy for calling freeGem of CDP_MANAGER\n"
seth send $myProxy 'execute(address,bytes memory)' $PROXY_ACTIONS_END $freeETHcalldata --gas 8000000 
read -p "Press enter to continue"


export balance=$(seth call $ETH "balanceOf(address)(uint)" $ETH_FROM)
printf "\nAfter balance of wrapped eth of ETH_FROM : $balance\n"
read -p "Press enter to continue"

printf "\n seth ls\n"

seth ls

read -p "Press enter to continue"

printf "\nCheck the urn; for which we are calling vat.urn(ink , art) After withdrawal\n"

seth call $MCD_VAT "urns(bytes32,address)(uint256,uint256)" $(seth --from-ascii "ETH-B")  $(seth call $CDP_MANAGER "urns(uint)" 3)

read -p "Press enter to continue"

printf "\nwithdrawing from wrappedETH\n"

seth send $ETH "withdraw(uint256)" $balance

read -p "Press enter to continue"

printf "\n seth ls\n"

seth ls


